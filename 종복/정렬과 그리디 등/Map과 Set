https://ko.javascript.info/map-set


맵과 셋  

- 지금까진 아래와 같은 복잡한 자료구조를 학습해 보았음  
  
  객체 - 키가 있는 컬렉션을 저장함  
  배열 - 순서가 있는 컬렉션을 저장함  
  
  하지만 현실 세계를 반영하기엔 이 두 자료구조만으론 부족해서 맵(Map)과 셋(Set)이 등장함  
  

- 맵  
  
  맵(Map)은 키가 있는 데이터를 저장한다는 점에서 객체와 유사함  
  맵은 키에 다양한 자료형을 허용한다는 점에서 차이가 있음  
  
  맵에는 다음과 같은 주요 메서드와 프로퍼티가 있음  
  
  new Map() - 맵을 만듦  
  map.set(key, value) - key를 이용해 value를 저장함  
  map.get(key) - key에 해당하는 값을 반환함. key가 존재하지 않으면 undefined를 반환함  
  map.has(key) - key가 존재하면 true, 존재하지 않으면 false를 반환함  
  map.delete(key) - key에 해당하는 값을 삭제함  
  map.clear() - 맵 안의 모든 요소를 제거함  
  map.size - 요소의 개수를 반환함  
  
ex)

let map = new Map();

map.set('1', 'str1');  // 문자형 키  
map.set(1, 'num1');  // 숫자형 키  
map.set(true, 'bool1'); // 불린형 키  

// 맵은 키의 타입을 변환시키지 않고 그대로 유지함
alert(map.get(1)); // 'num1'  
alert(map.get('1')); // 'str1'  

alert(map.size); // 3  



### 셋

- 셋(Set)은 중복을 허용하지 않는 값을 모아놓은 특별한 컬렉션임  
  셋에 키가 없는 값이 저장됨  
  
- 주요 메서드는 다음과 같음  

(1) new Set(iterable)
- 셋을 만듦. 이터러블 객체를 전달받으면(대개 배열을 전달받음)  
  그 안의 값을 복사해 셋을 넣어줌  
(2) set.add(value)
- 값을 추가하고 셋 자신을 반환함  
(3) set.delete(value)
- 값을 제거함. 호출 시점에 셋 내에 값이 있어서 제거에 성공하면 true,  
  아니면 false를 반환함. 
(4) set.has(value)
- 셋 내에 값이 존재하면 true, 아니면 false를 반환함  
(5) set.clear()
- 셋을 비움  
(6) set.size
- 셋에 몇 개의 값이 있는지 세줌  

  
  









